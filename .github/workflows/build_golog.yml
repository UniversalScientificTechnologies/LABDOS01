name: Build GoLog app

on:
  push:
  pull_request:

  workflow_dispatch:

jobs:
  build:
  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

#       - name: Build
#         uses: crazy-max/ghaction-xgo@v2
#         with:
#           xgo_version: latest
#           go_version: latest
#           dest: /sw/golog/build
#           pkg: /sw/golog
#           prefix: golog
#           targets: linux/amd64,linux/arm64,darwin/arm64
#           v: true
#           x: false
#           race: false
#           ldflags: -s -w
#           buildmode: default
#           trimpath: true
      
          
      - name: Set up Go
        run: |
          wget https://go.dev/dl/go1.19.3.linux-amd64.tar.gz
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf go1.19.3.linux-amd64.tar.gz
          rm -f go1.19.3.linux-amd64.tar.gz
          cd sw/golog/src
          sudo apt-get install gcc-multilib gcc-mingw-w64

      - name: Build
        run: |
          /usr/local/go/bin/go build .
          GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc /usr/local/go/bin/go build .


      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-results-${{ matrix.go-version }}
          path: sw/golog/
